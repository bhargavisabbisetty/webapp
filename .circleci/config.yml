# JavaScript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
---
version: 2
jobs:
  pr_check:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      - image: circleci/python:3.6.8-jessie

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install packages
          command: sudo apt-get update && sudo apt-get install wget zip unzip -y
      - run:
          name: Install python
          command: sudo apt-get install python-pip
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Hello World
          command: echo "Hello World"

     # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm rebuild bcrypt --update-binary
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: rm -rf node_modules/
      - run:
          name: Zip Artifact
          command: |
            echo "Hello the current build number is ${CIRCLE_BUILD_NUM}"
            aws configure set default.region us-east-1
            pwd
            ls -al
            mkdir -p codedeploy_artifact
            pwd
            cd ..
            mkdir -p webapp
            cd webapp
            pwd
            cp -r ./../repo/* . 
            ls -la
            zip -r webapp.zip .
            cd ..
            echo "done"
            ls -la
            cd repo
            echo "inside repo"
            zip -r csye6225-web-app-${CIRCLE_BUILD_NUM}.zip ./../webapp/webapp.zip ./codedeploy *.yml
            mv csye6225-web-app-${CIRCLE_BUILD_NUM}.zip codedeploy_artifact/
            ls -al
            pwd
            cd codedeploy_artifact
            ls -al
            pwd
            cd ..
            pwd
            ls -al

      - run:
          name: Upload Artifact to S3
          command: |
            aws s3 cp codedeploy_artifact/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip s3://${S3_BUCKET_ADDR}/deployments/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip --region us-east-1

      - run:
          name: Make CodeDeploy API call
          command: |
            aws deploy register-application-revision --application-name csye6225-webapp --s3-location bucket=${S3_BUCKET_ADDR},bundleType=zip,key=deployments/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip
            aws deploy create-deployment --application-name csye6225-webapp --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name csye6225-webapp-deployment --s3-location bucket=${S3_BUCKET_ADDR},bundleType=zip,key=deployments/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip

  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      - image: circleci/python:3.6.8-jessie
      
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install packages
          command: sudo apt-get update && sudo apt-get install wget zip unzip -y
      - run:
          name: Install python
          command: sudo apt-get install python-pip
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Hello World
          command: echo "Hello World"

       # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm rebuild bcrypt --update-binary
      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test

      - run:
          name: Zip Artifact
          command: |
            echo "Hello the current build number is ${CIRCLE_BUILD_NUM}"
            aws configure set default.region us-east-1
            pwd
            ls -al
            mkdir -p codedeploy_artifact
            mkdir webapp
            cd webapp
            cp ./../../repo . 
            ls -la
            cd ..
            zip csye6225-web-app-${CIRCLE_BUILD_NUM}.zip webapp ./codedeploy/*.sh *.yml
            ls -al
            mv csye6225-web-app-${CIRCLE_BUILD_NUM}.zip codedeploy_artifact/
            ls -al
            pwd
            cd codedeploy_artifact
            ls -al
            pwd
            cd ..
            pwd
            ls -al

      - run:
          name: Upload Artifact to S3
          command: |
            aws s3 cp codedeploy_artifact/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip s3://${S3_BUCKET_ADDR}/deployments/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip --region us-east-1

      - run:
          name: Make CodeDeploy API call
          command: |
            aws deploy register-application-revision --application-name csye6225-webapp --s3-location bucket=${S3_BUCKET_ADDR},bundleType=zip,key=deployments/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip
            aws deploy create-deployment --application-name csye6225-webapp --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name csye6225-webapp-deployment --s3-location bucket=${S3_BUCKET_ADDR},bundleType=zip,key=deployments/csye6225-web-app-${CIRCLE_BUILD_NUM}.zip
      
    

workflows:
  version: 2
  pr-check-workflow:
    jobs:
    - pr_check
  # build-workflow:
  # jobs:
  # - build:
  #      filters:
  #        branches:
  #         only:
  #          - master